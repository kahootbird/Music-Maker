import React, {useEffect, useState } from "react";

import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import * as Tone from "tone";
import Script from 'next/script'
import Component1 from '../comps/Component1'
import Piano from '../comps/Piano'

export default function Home() {
  const [count, setCount] = useState(0)
  const handleAdd = () =>
  {
    //this.callmemaybe()
    console.log("FUNCTION CALLED")
    //setCount(count+1)
  }
function callmemaybe()
{
  console.log("CALL ME CALLED")
}
  //useEffect filter to get audio to playing otherwise AudioBuffer error will occur
  const [noise, setNoise] = useState(null);

    const [autoFilter, setAutoFilter] = useState(null);
      const [note, setNote] = useState(false)

//Play note based on key
function notez(key)
{
  const synth = new Tone.Synth().toDestination();
  synth.triggerAttackRelease(key, "8n");

  //console.log(key)
}
function piano_key_click(keynum)
{
  console.log("PIANO KEY CLICK " + keynum)
  notez(keynum)
  //notez(keynum)
}

//Play the basic keys with keyboard, not fully implemented with all keys just these four
const aPress = useKeyPress("a");
const bPress = useKeyPress("b");
const cPress = useKeyPress("c");
const dPress = useKeyPress("d");

function useKeyPress(targetKey) {
  // State for keeping track of whether key is pressed
  const [keyPressed, setKeyPressed] = useState(false);
  // If pressed key is our target key then set to true
  function downHandler({ key }) {
    if (key === targetKey) {
      setKeyPressed(true);
    }
  }
  // If released key is our target key then set to false
  const upHandler = ({ key }) => {
    if (key === targetKey) {
      setKeyPressed(false);
      //console.log("keypress " + key)
      notez(key + "4")
    }
  };
  // Add event listeners
  useEffect(() => {
    window.addEventListener("keydown", downHandler);
    window.addEventListener("keyup", upHandler);
    // Remove event listeners on cleanup
    return () => {
      window.removeEventListener("keydown", downHandler);
      window.removeEventListener("keyup", upHandler);
    };
  }, []); // Empty array ensures that effect is only run on mount and unmount
  return keyPressed;
}




  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <script
  src="/play_audio.js"
  strategy="beforeInteractive"
/>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to Piano App!
        </h1>
< Piano piano_key_click={piano_key_click}/>




  <div className="container">
  <br />
  <br />
  <br />
  <h1 className={styles.title}>
    Created by Ronnie Goodrich as part of #100DaysOfCode Challenge
  </h1>
    <div className="buttons">
    </div>
  </div>

    <div className={styles.grid}>

    </div>
    </main>

  </div>
  )
}
